Class Form.Installer
{

Parameter Namespace = "RESTFORMS2";

XData Install
{
<Manifest>
    <Log Text="Creating namespace ${Namespace}" Level="0"/> 
    <Namespace Name="${Namespace}" Create="yes" Code="${Namespace}-APP" Ensemble="" Data="${Namespace}-DATA"> 
        <Configuration> 
            <Database Name="${Namespace}-DATA" Dir="/opt/restforms2/db/DATA" Create="yes" MountRequired="true" Resource="%DB_DEFAULT" PublicPermissions="RW" MountAtStartup="true"/> 
            <Database Name="${Namespace}-APP" Dir="/opt/restforms2/db/APP" Create="yes" MountRequired="true" Resource="%DB_DEFAULT" PublicPermissions="RW" MountAtStartup="true"/> 
        </Configuration>
        <Import File="/opt/restforms2/src/Form.inc" Recurse="1" Flags="cuk" />
        <Import File="/opt/restforms2/src/" Recurse="1" Flags="cuk" />
    </Namespace>
</Manifest>
}

/// This is a method generator whose code is generated by XGL. 
ClassMethod RunManifest(ByRef pVars, pLogLevel As %Integer = 0, pInstaller As %Installer.Installer) As %Status [ CodeMode = objectgenerator, Internal ]
{
    Quit ##class(%Installer.Manifest).%Generate(%compiledclass, %code, "Install")
}

/// Installer Entry point    
ClassMethod Run() As %Status
{
    try { 
        write "START INSTALLER",! 
        set vars("Namespace") = ..#Namespace 
        $$$ThrowOnError(..RunManifest(.vars)) 

        // create web application
        $$$ThrowOnError(..CreateWebApp())

        // enable UnitTest Portal for APP namespace
        zn "%SYS"
        set ^SYS("Security","CSP","AllowPrefix","/csp/restforms2/","%UnitTest")=1

        if sc {
            write !,"INSTALLER SUCCESS",!
        } else {
            do $SYSTEM.Process.Terminate($JOB,1)
        }
    } catch ex { 
        set sc = ex.AsStatus() 
        write $System.Status.GetErrorText(sc),! 
        do $SYSTEM.Process.Terminate($JOB,1) 
    } 
    quit sc
}

/// Create web application
ClassMethod CreateWebApp() As %Status
{
  set ret = $$$OK
  try {
    zn "%SYS" 
    set webName = "/forms" 
    set webProperties("DispatchClass") = "Form.REST.Main" 
    set webProperties("NameSpace") = ..#Namespace 
    set webProperties("Enabled") = 1 
    set webProperties("AutheEnabled") = 32 
    $$$ThrowOnError(##class(Security.Applications).Create(webName, .webProperties))

    write "Web application "_webName_" has been created!"
  } catch ex {
    set ret = ex.AsStatus()
  } 
  quit ret
}

}
